services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
    networks:
      - dev

  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dev

  frontend:
    build:
      context: ./frontend
    networks:
      - dev

  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=postgres pg_isready --username=postgres --dbname=twotired"]
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - dev

networks:
  dev:

volumes:
  postgres_data: